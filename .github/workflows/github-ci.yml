name: Docker Image CI

on:
  push:
    tags:
      - '*' 

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_DAPP: ${{ github.repository }}-dapp
  IMAGE_NAME_PUBLISHER: ${{ github.repository }}-publisher

jobs:
  build-and-push-dapp:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_DAPP }}
        # Set the list of tags for the Docker image
        tags: |
          type=ref,event=tag
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./dapp
        file: ./dapp/docker/Dockerfile
        build-args: |
          NEXT_PUBLIC_ENV=${{ vars.NEXT_PUBLIC_ENV }}
          NEXT_PUBLIC_NATS_URL=${{ vars.NEXT_PUBLIC_NATS_URL }}
          NEXT_PUBLIC_ACCESS_TOKEN=${{ vars.NEXT_PUBLIC_ACCESS_TOKEN }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  build-and-push-publisher:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_PUBLISHER }}
        # Set the list of tags for the Docker image
        tags: |
          type=ref,event=tag
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./publisher
        file: ./publisher/docker/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  create-release:
    runs-on: ubuntu-latest
    needs: [build-and-push-dapp, build-and-push-publisher]
    steps:
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ðŸš€ New release available! The Docker images for this release are:

          - **DApp Image**: `ghcr.io/syntropynet/${{ env.IMAGE_NAME_DAPP }}:${{ github.ref_name }}`
          - **Publisher Image**: `ghcr.io/syntropynet/${{ env.IMAGE_NAME_PUBLISHER }}:${{ github.ref_name }}`

          Pull them using the commands below:
          ```
          docker pull ghcr.io/syntropynet/${{ env.IMAGE_NAME_DAPP }}:${{ github.ref_name }}
          docker pull ghcr.io/syntropynet/${{ env.IMAGE_NAME_PUBLISHER }}:${{ github.ref_name }}
          ```
        draft: false
        prerelease: false
